- category: Data
  entries:
    - name: Quick calculations
      id: quick_calc
      content: |
        import yt
        ds = yt.load("IsolatedGalaxy/galaxy0030/galaxy0030")
        ds.r[0.45:0.55,:,:].sum("cell_mass").in_units("Mjup")
      output: |
        9.98537989593e+12 Mjup
    - name: Derived fields
      id: derived_fields
      content: |
        import yt
        ds = yt.load("IsolatedGalaxy/galaxy0030/galaxy0030")
        def thermal_energy_dens(field, data):
            return (3/2)*data['gas', 'number_density'] * data['gas', 'kT']
        ds.add_field(("gas", "thermal_energy_density"), units="erg/cm**3",
                     function=thermal_energy_dens)
        ds.r[:].mean("thermal_energy_density", "z", weight="density").plot()
      image: galaxy0030_Projection_z_thermal_energy_density_density.png
    - name: Unit systems
      id: unit_systems
      content: |
        import yt
        ds = yt.load("GasSloshing/sloshing_nomag2_hdf5_plt_cnt_0150",
                     unit_system="imperial")
        slc = yt.SlicePlot(ds, 'z', "kT", width=(600,"kpc"))
      image: sloshing_nomag2_hdf5_plt_cnt_0150_Slice_z_kT.png
- category: Viz
  entries:
    - name: Slicing
      id: slicing
      content: |
        import yt
        ds = yt.load("snapshot_033/snap_033.0.hdf5")
        ds.r[(12.4, 'Mpc'),:,:].plot()
    - name: Integrating
      id: integrating
      content: |
        import yt
        ds = yt.load()
    - name: Interaction
      id: interaction
      content: |
        import yt
        ds = yt.load("IsolatedGalaxy/galaxy0030/galaxy0030")
        yt.interactive_render(ds)
- category: Analysis
  entries:
    - name: Extrema
      id: extrema
      content: |
        ds.r[:].ptp()
        ds.r[:].max()
        ds.r[:].max()
        ds.r[:].max()
        ds.r[:].max()
        ds.r[:].max()
        ds.r[:].max()
